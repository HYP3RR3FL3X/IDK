local function Notify(title, msg, dur) 
    pcall(function() 
        game:GetService("StarterGui"):SetCore("SendNotification", {Title=title; Text=msg; Duration=dur}) 
    end) 
end

pcall(function()
    repeat wait() until game:IsLoaded() and game.Players.LocalPlayer.Character
    local Titans = workspace:WaitForChild("Titans", 5)
    if not Titans then Notify("Script Error", "No Titans Found", 5) return end
    wait(1)
    local Player = game.Players.LocalPlayer
    local HRP = Player.Character:WaitForChild("HumanoidRootPart")
    local Remotes = game.ReplicatedStorage:WaitForChild("Assets"):WaitForChild("Remotes")
    local TitansStorage = {}
    local TitansProcessed = 0
    for _, Titan in ipairs(Titans:GetChildren()) do
        if Titan:IsA("Model") and Titan:FindFirstChild("Humanoid") then
            TitansStorage[Titan.Name] = Titan
        end
    end
    Notify("Hexhub", "Started "..#Titans:GetChildren().." Titans", 5)
    for _, Titan in pairs(TitansStorage) do
        local Nape = Titan:FindFirstChild("Hitboxes") and Titan.Hitboxes:FindFirstChild("Hit") and Titan.Hitboxes.Hit:FindFirstChild("Nape")
        if Nape then
            task.spawn(function() while Nape and Nape.Parent and Nape.Parent.Parent do Nape.Position = HRP.Position task.wait() end end)
        end
    end
    Remotes.GET:InvokeServer("S_Skills", "Usage", "23")
    Notify("InvokeServer", "Torrential Steel Started", 5)
    task.wait(1)
    Remotes.GET:InvokeServer("S_Skills", "Usage", "14")
    Notify("InvokeServer", "Drill Thrust Started", 5)
    task.wait(0.5)
    Remotes.GET:InvokeServer("Functions", "Retry", "Add")
    Notify("InvokeServer", "Retrying....", 5)
    while true do
        local index = 0
        for _, v in pairs(Titans:GetChildren()) do
            if v:FindFirstChild("Humanoid") then index = index + 1 end
        end
        Notify("Titans Remaining", tostring(index), 5)
        task.wait(2)
    end
end)
